{"version":3,"sources":["../../../src/@ionic-native/plugins/twitter-connect/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAqBxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AAWH,IAAa,cAAc;IAAS,kCAAiB;IAArD;;IAgCA,CAAC;IA/BC;;;OAGG;IAEH,8BAAK,GAAL,cAA2C,MAAM,CAAC,CAAC,CAAC;IACpD;;;OAGG;IAEH,+BAAM,GAAN,cAAyB,MAAM,CAAC,CAAC,CAAC;IAElC;;;OAGG;IAEH,iCAAQ,GAAR,cAA2B,MAAM,CAAC,CAAC,CAAC;IACpC;;;OAGG;IAEL,sCAAa,GAAb,cAAgC,MAAM,CAAC,CAAC,CAAC;IAOzC,qBAAC;AAAD,CAhCA,AAgCC,CAhCmC,iBAAiB,GAgCpD;AANM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAzBA;IADC,OAAO,EAAE;;;;2CAC0C;AAMpD;IADC,OAAO,EAAE;;;;4CACwB;AAOlC;IADC,OAAO,EAAE;;;;8CAC0B;AAMtC;IADC,OAAO,EAAE;;;;mDAC+B;AAzB5B,cAAc;IAV1B,MAAM,CAAC;QACN,UAAU,EAAE,gBAAgB;QAC5B,MAAM,EAAE,EAAE;QACV,SAAS,EAAE,gBAAgB;QAC3B,IAAI,EAAE,6DAA6D;QACnE,OAAO,EAAE,sFAAsF;QAC/F,gBAAgB,EAAE,CAAC,YAAY,CAAC;QAChC,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,cAAc,CAgC1B;SAhCY,cAAc","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\nexport interface TwitterConnectResponse {\n  /**\n   * Twitter Username\n   */\n  userName: string;\n  /**\n   * Twitter User ID\n   */\n  userId: string;\n  /**\n   * Twitter OAuth Secret\n   */\n  secret: string;\n  /**\n   * Twitter OAuth Token\n   */\n  token: string;\n}\n\n/**\n * @name Twitter Connect\n * @description\n * Plugin to use Twitter Single Sign On\n * Uses Twitter's Fabric SDK\n * ```typescript\n * import { TwitterConnect } from '@ionic-native/twitter-connect';\n *\n * constructor(private twitter: TwitterConnect) { }\n *\n * ...\n *\n * function onSuccess(response) {\n *   console.log(response);\n *\n *   // Will console log something like:\n *   // {\n *   //   userName: 'myuser',\n *   //   userId: '12358102',\n *   //   secret: 'tokenSecret'\n *   //   token: 'accessTokenHere'\n *   // }\n * }\n *\n * this.twitter.login().then(onSuccess, onError);\n *\n * this.twitter.logout().then(onLogoutSuccess, onLogoutError);\n * ```\n * @interfaces\n * TwitterConnectResponse\n */\n@Plugin({\n  pluginName: 'TwitterConnect',\n  plugin: '',\n  pluginRef: 'TwitterConnect',\n  repo: 'https://github.com/ManifestWebDesign/twitter-connect-plugin',\n  install: 'ionic cordova plugin add twitter-connect-plugin --variable FABRIC_KEY=fabric_API_key',\n  installVariables: ['FABRIC_KEY'],\n  platforms: ['Android', 'iOS']\n})\n\nexport class TwitterConnect extends IonicNativePlugin {\n  /**\n   * Logs in\n   * @returns {Promise<TwitterConnectResponse>} returns a promise that resolves if logged in and rejects if failed to login\n   */\n  @Cordova()\n  login(): Promise<TwitterConnectResponse> { return; }\n  /**\n   * Logs out\n   * @returns {Promise<any>} returns a promise that resolves if logged out and rejects if failed to logout\n   */\n  @Cordova()\n  logout(): Promise<any> { return; }\n\n  /**\n   * Returns user's profile information\n   * @returns {Promise<any>} returns a promise that resolves if user profile is successfully retrieved and rejects if request fails\n   */\n  @Cordova()\n  showUser(): Promise<any> { return; }\n  /**\n   * Returns user's profile information\n   * @returns {Promise<any>} returns a promise that resolves if user profile is successfully retrieved and rejects if request fails\n   */\n@Cordova()\nshowUserEmail(): Promise<any> { return; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}